name: Mirror repo to S3

on:
  schedule:
    # Runs everyday at 12 am
    - cron: '0 0 * * * '
  workflow_dispatch:
  
jobs:
  s3Backup:
    runs-on: docker-builds
    steps:
      - uses: actions/checkout@v1
      
      - name: Get info
        id: get_info
        run: |
          GIT_COMMIT_DATE="$((`git log -n 1 --date-order --all | grep Date | awk '{ print $4 }'`))"
          YESTERDAY_DATE="$((`date | awk '{ print $3 }'`-1))"
          echo ::set-output name=GIT_COMMIT_DATE::${GIT_COMMIT_DATE}
          echo ::set-output name=YESTERDAY_DATE::${YESTERDAY_DATE}
          echo $GIT_COMMIT_DATE
          echo $YESTERDAY_DATE
      
      - name: Create backup
        if: steps.get_info.outputs.GIT_COMMIT_DATE == steps.get_info.outputs.YESTERDAY_DATE
        run: |
          github-backup -O 0chain -P -t ${{ secrets.ACCESS_TOKEN }} --output-directory=/github-backup/0dns --all -O -R 0dns
          
      - name: Create zip
        if: steps.get_info.outputs.GIT_COMMIT_DATE == steps.get_info.outputs.YESTERDAY_DATE
        run: zip -r 0dns.zip /github-backup/0dns
        
      - name: Set AWS credentials
        if: steps.get_info.outputs.GIT_COMMIT_DATE == steps.get_info.outputs.YESTERDAY_DATE
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          
      - name: Backup to s3
        if: steps.get_info.outputs.GIT_COMMIT_DATE == steps.get_info.outputs.YESTERDAY_DATE
        run: |
          aws s3 cp 0dns.zip s3://${{ secrets.MIRROR_TARGET }}/0dns.zip
